scalar GraphQLDate

enum StatusType {
  Admin
  User
}

type branch {
  _id: ID!
  id: Int!
  title: String!
  owner: User!
  created: GraphQLDate!
  details: String
  parent: branch
  children: [branch]
}

type User {
  signedIn: Boolean!
  givenName: String
  name: String
  email: String
  role: StatusType!
}

"Toned down branch, used as inputs, without server generated values."
input branchInputs {
  title: String!
  "Optional, if not supplied, will be set to 'User'"
  status: StatusType = User
  owner: User!
  description: String
}

"""Inputs for branchUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input BranchUpdateInputs {
  title: String
  details: String
  parent: branch
  children: [branch]
}

##### Top level declarations

type Query {
  about: String!
  user: User!
}

type Mutation {
  setAboutMessage(message: String!): String
  branchAdd(branch: branchInputs!): branch!
  branchUpdate(id: Int!, changes: BranchUpdateInputs!): branch!
  branchDelete(id: Int!): Boolean
  branchRestore(id: Int!): Boolean!
}
